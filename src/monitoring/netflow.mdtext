## Netflow for network monitoring

If you manage a network that spans more than one site, then you need something to
monitor the connectivity between sites, and you need [Michael W. Lucas' book "Network Flow Analysis."](
http://networkflowanalysis.com)

If you have the brain power, and time, then by all means search the web and find 
the tools listed here. For those of us with less brain power (or time?) then
the above book is a great investment.

There may be other tools, exorbitantly priced or free, for monitoring the performance
of your network, but the above book gives great examples for installing and validating
your new monitoring system 

Netflow is a protocol for 'publishing' flow information on a device. The device 'sensor' 
publishes the flow data which is 'recorded' by another device on the network
called a 'collector'

### Sensor

The [Sensor](netflow/sensor.html) is deployed on the network edge server/device and replicates traffic data points 
at the "device/host" which it publishes as a UDP broadcast to a collector.

On switching appliances, such as Cisco and Juniper the sensor is probably installed or configurable on the device.
Various software tools exist for Unix, including [softflowd](http://code.google.com/p/softflowd) 

For OpenBSD, we've been using $!manpage("pflow",4)!$

### Collector

The [Collector](netflow/collector.html) accepts traffic from Sensors. 
The collected data is now available for further analysis/evaluation.

Command-line analysis is provided with flow-tools, but more graphical
tools are also available.

[FlowScan/CUFlow](netflow/graphs.flowscan.html) give general packet flow overview.

[FlowViewer](netflow/graphs.flowviewer.html) allows customised queries

In a standard workflow environment, we monitor general traffic using [smokeping](smokeping.html)
get a live view of an effected link using [FlowScan/CUFlow](netflow/graphs.flowscan.html) to
determine general flow issues, and then drill deeper for specifics using
[FlowViewer](netflow/graphs.flowviewer.html)